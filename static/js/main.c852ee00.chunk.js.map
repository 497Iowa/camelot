{"version":3,"sources":["workspaceEnvironment.js","defaultFilters.js","components/Core/ImageHarness.js","components/Core/UploadImage.js","components/Core/BuiltInImageDropdown.js","pages/create.js","toolbox.js","defaultWorkspace.js","FilterNavigator.js","pages/filters.js","components/Filters/FilterSelector.js","LessonData.js","Lessons.js","customBlocks/customBlocks.js","components/Navbar/NavbarElements.js","components/Navbar/index.js","pages/index.js","navbarApp.js","reportWebVitals.js","index.js"],"names":["module","exports","workspaceEnvironment","workspaceRunner","workspaceRunnerPersist","defaultFilters","filters","name","xml","ImageHarness","props","useState","img","setImg","switching","setSwitching","useEffect","switchImage","url","disableSwitching","window","renderFinished","console","log","document","querySelector","removeAttribute","loadImage","runButton","showRunButton","className","loading","onClick","onRunClick","id","onChange","e","class","link","createElement","download","href","getElementById","toDataURL","click","UploadImage","setImageURI","type","target","files","reader","FileReader","onload","ev","result","undefined","readAsDataURL","readURI","BuiltInImageDropdown","dropdown","setDropdown","images","items","i","push","alt","src","length","aria-haspopup","aria-controls","aria-hidden","role","Create","setXml","loadedXml","setLoadedXml","javascriptCode","setJavascriptCode","workspace","setWorkspace","dirty","setDirty","filterLoading","setFilterLoading","workspaceDidChange","_workspace","code","Blockly","JavaScript","workspaceToCode","body","parentElement","style","overflowY","onXmlChange","_xml","loadXml","clear","Xml","domToWorkspace","textToDom","runCode","eval","alert","toolboxConfiguration","utils","toolbox","convertToolboxDefToJson","toolboxConfig","initialXml","defaultWorkspace","workspaceConfiguration","collapse","comments","disable","maxBlocks","Infinity","grid","spacing","colour","snap","renderer","theme","trashcan","horizontalLayout","toolboxPosition","css","media","rtl","scrollbars","sounds","oneBasedIndex","onWorkspaceChange","FilterNavigator","filterInput","setFilterInput","setFilters","updateFiltersInStorage","newFilters","localStorage","setItem","JSON","stringify","isFilterInStorage","find","elt","isFilterDefault","getItem","parse","getFiltersFromStorage","FilterItem","filterProps","onEditClicked","filter","editButton","isDefault","deleteButton","loadButton","saveBtnClass","saveBtnDisabled","showUnsavedMessage","showNewFilterMessage","unsaved","newFilter","sort","a","b","time","filtersDropdownItems","map","placeholder","value","disabled","Date","now","Filters","ws","Workspace","applyFilter","onFinish","ret","setLoading","aria-label","FilterSelector","data","Lessons","lessonText","index","disabledPrev","disabledNext","status","setStatus","resetScroll","scrollTop","Prev","toggle","active","Next","showLoadBtn","hasOwnProperty","title","text","togglePrev","toggleNext","Blocks","init","this","appendDummyInput","appendField","FieldVariable","setOutput","appendValueInput","setCheck","setPreviousStatement","setNextStatement","FieldNumber","setColour","setTooltip","setHelpUrl","block","x_val","getFieldValue","y_val","value_name","valueToCode","ORDER_ATOMIC","jsonInit","variable0","variableDB_","getName","Variables","NAME_TYPE","branch","statementToCode","INDENT","red","ORDER_NONE","green","blue","provideFunction_","FUNCTION_NAME_PLACEHOLDER_","ORDER_FUNCTION_CALL","setAlign","ALIGN_RIGHT","value_hue","value_saturation","value_brightness","styled","nav","NavLink","Link","Navbar","FaBars","div","width","height","aria-expanded","data-target","to","Home","setIndex","navigate","useNavigate","TryMe","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c852ee00.chunk.js","sourcesContent":["const workspaceEnvironment = `\n\n\n\n`\n\nconst workspaceRunner = `\nCaman(\"#test-canvas\", function () {\n    this.revert(false);\n    this.storeOriginalImg();\n    this.currentFilter().render()\n});\n`\n\nconst workspaceRunnerPersist = `\nCaman(\"#test-canvas\", function () {\n    this.storeOriginalImg();\n    this.currentFilter().render();\n});\n\n`\n\nmodule.exports = {\n    workspaceEnvironment,\n    workspaceRunner,\n    workspaceRunnerPersist\n}","const defaultFilters = {\n    filters: [\n        {\n            name: \"Chromatic Aberration\",\n            \"xml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><variables><variable id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</variable></variables><block type=\\\"for_each_pixel\\\" id=\\\"{~CbTV}~[Q42e2ADFK}Q\\\" x=\\\"106\\\" y=\\\"163\\\"><field name=\\\"PIXEL_VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><statement name=\\\"Loop\\\"><block type=\\\"variables_set\\\" id=\\\"g`lwqhp),#j)mkeCF$t5\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><value name=\\\"VALUE\\\"><block type=\\\"colour_rgb\\\" id=\\\"Y$hS#9i`oc#E@e9#JsaU\\\"><value name=\\\"RED\\\"><block type=\\\"get_red_of\\\" id=\\\"-[w)1Wzy:1--Ll0)ilpD\\\"><value name=\\\"NAME\\\"><block type=\\\"get_pixel_relative\\\" id=\\\"!1G=(pH==UE_{PSBvzQ2\\\"><field name=\\\"X_VAL\\\">5</field><field name=\\\"Y_VAL\\\">5</field><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"39nZ]@u7~$^c6ZGsnBcc\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value></block></value><value name=\\\"GREEN\\\"><block type=\\\"get_green_of\\\" id=\\\"(?usMY}6FuS6JugAhNO*\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"Jx7(^,QF;7o#)6|LWM1=\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value><value name=\\\"BLUE\\\"><block type=\\\"get_blue_of\\\" id=\\\"1_UZ.L@5QYF]AY+ofL+b\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"WQ3X/qFMO2O!t^$~t,YI\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value></block></value></block></statement></block></xml>\"\n        },\n        {  \n            name: \"Grain\",\n            xml:\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><variables><variable id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</variable></variables><block type=\\\"for_each_pixel\\\" id=\\\"{~CbTV}~[Q42e2ADFK}Q\\\" x=\\\"100\\\" y=\\\"115\\\"><field name=\\\"PIXEL_VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><statement name=\\\"Loop\\\"><block type=\\\"variables_set\\\" id=\\\"g`lwqhp),#j)mkeCF$t5\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><value name=\\\"VALUE\\\"><block type=\\\"colour_blend\\\" id=\\\"!1)Sro?i+EeB|/#CDGy9\\\"><value name=\\\"COLOUR1\\\"><shadow type=\\\"colour_picker\\\" id=\\\"5R@uqDTT$=tsLV-y-qSO\\\"><field name=\\\"COLOUR\\\">#ff0000</field></shadow><block type=\\\"colour_rgb\\\" id=\\\"Y$hS#9i`oc#E@e9#JsaU\\\"><value name=\\\"RED\\\"><block type=\\\"get_red_of\\\" id=\\\"-[w)1Wzy:1--Ll0)ilpD\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"39nZ]@u7~$^c6ZGsnBcc\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value><value name=\\\"GREEN\\\"><block type=\\\"get_green_of\\\" id=\\\"(?usMY}6FuS6JugAhNO*\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"WQ3X/qFMO2O!t^$~t,YI\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value><value name=\\\"BLUE\\\"><block type=\\\"get_blue_of\\\" id=\\\"1_UZ.L@5QYF]AY+ofL+b\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"Jx7(^,QF;7o#)6|LWM1=\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value></block></value><value name=\\\"COLOUR2\\\"><shadow type=\\\"colour_picker\\\" id=\\\"d]I+,_:1Z*+rI#$C.-:f\\\"><field name=\\\"COLOUR\\\">#3333ff</field></shadow><block type=\\\"colour_random\\\" id=\\\"{.sR.{a#-JFN63[^[:D,\\\"></block></value><value name=\\\"RATIO\\\"><shadow type=\\\"math_number\\\" id=\\\"iTZ65H3f3-yzL`wN8:]4\\\"><field name=\\\"NUM\\\">0.2</field></shadow></value></block></value></block></statement></block></xml>\",\n        },\n        {\n            name: \"Blur\",\n            \"xml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><variables><variable id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</variable></variables><block type=\\\"for_each_pixel\\\" id=\\\"{~CbTV}~[Q42e2ADFK}Q\\\" x=\\\"38\\\" y=\\\"138\\\"><field name=\\\"PIXEL_VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><statement name=\\\"Loop\\\"><block type=\\\"variables_set\\\" id=\\\"g`lwqhp),#j)mkeCF$t5\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><value name=\\\"VALUE\\\"><block type=\\\"colour_blend\\\" id=\\\"6M_Suy]@PggivITL+8[m\\\"><value name=\\\"COLOUR1\\\"><shadow type=\\\"colour_picker\\\" id=\\\"tJii_*A~79AD%wpkBEF6\\\"><field name=\\\"COLOUR\\\">#ff0000</field></shadow><block type=\\\"colour_blend\\\" id=\\\"t3a3FU0q)E/Yy5/-JY]4\\\"><value name=\\\"COLOUR1\\\"><shadow type=\\\"colour_picker\\\" id=\\\"dshjd~/O.@OWP~^}1_sZ\\\"><field name=\\\"COLOUR\\\">#ff0000</field></shadow><block type=\\\"get_pixel_relative\\\" id=\\\"IKyE;_rL?oFiKAHyI]CE\\\"><field name=\\\"X_VAL\\\">1</field><field name=\\\"Y_VAL\\\">0</field><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"^ZUw/L4c`iA[J0qBXX0u\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value><value name=\\\"COLOUR2\\\"><shadow type=\\\"colour_picker\\\" id=\\\"Q%^Jt852Yu4|/p:.N[7@\\\"><field name=\\\"COLOUR\\\">#3333ff</field></shadow><block type=\\\"get_pixel_relative\\\" id=\\\"`#jy${|26$Ux2:$fq@xY\\\"><field name=\\\"X_VAL\\\">-1</field><field name=\\\"Y_VAL\\\">0</field><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"*?*9+c:Xg*av7g*W!4+:\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value><value name=\\\"RATIO\\\"><shadow type=\\\"math_number\\\" id=\\\"1]JDA%dPNk)Ne2v]u5gR\\\"><field name=\\\"NUM\\\">0.5</field></shadow></value></block></value><value name=\\\"COLOUR2\\\"><shadow type=\\\"colour_picker\\\" id=\\\"`a`gtiiS(YN.vPiuradh\\\"><field name=\\\"COLOUR\\\">#3333ff</field></shadow><block type=\\\"colour_blend\\\" id=\\\"QBtmH:z$@1RrgU!H`lR#\\\"><value name=\\\"COLOUR1\\\"><shadow type=\\\"colour_picker\\\" id=\\\"?(3HF`b5pw_A,wVht9Gd\\\"><field name=\\\"COLOUR\\\">#ff0000</field></shadow><block type=\\\"get_pixel_relative\\\" id=\\\"lnFX$z]W5,):lUhFp(qR\\\"><field name=\\\"X_VAL\\\">0</field><field name=\\\"Y_VAL\\\">1</field><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"f)H,e!3yFIuu=APTNw{Z\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value><value name=\\\"COLOUR2\\\"><shadow type=\\\"colour_picker\\\" id=\\\"t_=ud~7=SA9968|7G;^b\\\"><field name=\\\"COLOUR\\\">#3333ff</field></shadow><block type=\\\"get_pixel_relative\\\" id=\\\"XTpUpZN16dNm9J?bVFiE\\\"><field name=\\\"X_VAL\\\">0</field><field name=\\\"Y_VAL\\\">-1</field><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"#n%!?d+^?Mf($L;@(M,[\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value><value name=\\\"RATIO\\\"><shadow type=\\\"math_number\\\" id=\\\"vP^]Ibpq_Gt%bocTYZ(4\\\"><field name=\\\"NUM\\\">0.5</field></shadow></value></block></value><value name=\\\"RATIO\\\"><shadow type=\\\"math_number\\\" id=\\\"E(Q:Qgg$~[bQeBM3E@oB\\\"><field name=\\\"NUM\\\">0.5</field></shadow></value></block></value></block></statement></block></xml>\",\n        },\n        {\n            name: \"Saturate\",\n            \"xml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><variables><variable id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</variable></variables><block type=\\\"for_each_pixel\\\" id=\\\"{~CbTV}~[Q42e2ADFK}Q\\\" x=\\\"38\\\" y=\\\"138\\\"><field name=\\\"PIXEL_VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><statement name=\\\"Loop\\\"><block type=\\\"variables_set\\\" id=\\\"g`lwqhp),#j)mkeCF$t5\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><value name=\\\"VALUE\\\"><block type=\\\"color_with_hsv\\\" id=\\\"(:V$F~Sdqb||Y)TYWlu.\\\"><value name=\\\"hue\\\"><shadow type=\\\"math_number\\\" id=\\\"$N.AfXck9).4=BPJhnCM\\\"><field name=\\\"NUM\\\">100</field></shadow><block type=\\\"get_hue_of\\\" id=\\\"1-F31v5`lHp/;;MDZ6v|\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"WQ3X/qFMO2O!t^$~t,YI\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value><value name=\\\"saturation\\\"><shadow type=\\\"math_number\\\" id=\\\"*p2w~.IBtl68pL=$XnR|\\\"><field name=\\\"NUM\\\">50</field></shadow><block type=\\\"math_arithmetic\\\" id=\\\"5~-9vm79EL9/HjBu/V$m\\\"><field name=\\\"OP\\\">MULTIPLY</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\" id=\\\"Cw-!pVdcp/N}[I/_9suO\\\"><field name=\\\"NUM\\\">1.3</field></shadow></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"l3o]E23:H-v,-(y,ar@%\\\"><field name=\\\"NUM\\\">1</field></shadow><block type=\\\"get_saturation_of\\\" id=\\\"#dq2giSKS7gR//Q+5=^O\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"39nZ]@u7~$^c6ZGsnBcc\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value></block></value><value name=\\\"brightness\\\"><shadow type=\\\"math_number\\\" id=\\\"3p@cXD7CQSAc`ekG6}bb\\\"><field name=\\\"NUM\\\">50</field></shadow><block type=\\\"get_brightness_of\\\" id=\\\"=Lob)*/HVF50,;gRZqq5\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"Jx7(^,QF;7o#)6|LWM1=\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value></block></value></block></statement></block></xml>\"\n        }\n    ]\n}\n\nexport default defaultFilters;\n","import React, { useState, useEffect } from \"react\";\nimport BuiltInImageDropdown from \"./BuiltInImageDropdown\";\nimport UploadImage from \"./UploadImage\";\n\nconst ImageHarness = props => {\n\n  const [img, setImg] = useState(\"\")\n  const [switching, setSwitching] = useState(false);\n\n  useEffect(() => {\n    switchImage(\"../wp.jpg\", true);\n  }, []);\n\n  const switchImage = (url, disableSwitching = false) => {\n    if (!disableSwitching) setSwitching(true);\n    window.renderFinished = [() => {console.log(\"asdf\")}, () => setSwitching(false)];\n    setImg(url);\n    document.querySelector('#test-canvas').removeAttribute('data-caman-id');\n    window.loadImage(url);\n  }\n  \n  const resetImage = () => {\n    switchImage(img);\n  }\n\n  const downloadCanvas = () => {\n    var link = document.createElement('a');\n    link.download = 'output.png';\n    link.href = document.getElementById('test-canvas').toDataURL()\n    link.click();\n  }\n  \n  const runButton = props.showRunButton ? <button className={`mx-1 run-btn button is-success ${props.loading ? \"is-loading\" : \"\"}`} onClick={props.onRunClick}>\n    <span>Run Filter</span>\n      <span className=\"icon is-small\">\n      <i className=\"fas fa-play\"></i>\n    </span>\n  </button> : <></>\n\n  return (\n    <div>\n        <div className=\"canvas-cntr\">\n          <canvas className=\"mx-auto is-block\" id=\"test-canvas\"></canvas>\n          <div className={`canvas-overlay is-flex is-justify-content-center is-align-items-center ${!props.loading && !switching ? \"overlay-hidden\" : \"\"}`}>\n            <span className=\"loading-icon icon is-large\">\n              <i className=\"fas fa-cog fa-spin\"></i>\n            </span>\n          </div>\n        </div>\n        \n        <div className=\"m-2 is-flex is-justify-content-center\">\n          <BuiltInImageDropdown onChange={(e) => switchImage(e)}></BuiltInImageDropdown>\n          <UploadImage onChange={(e) =>switchImage(e)}></UploadImage>\n        </div>\n        <div className=\"m-2 is-flex is-justify-content-center\">\n        {runButton}\n        <button className=\"mx-1 reset-btn button\" onClick={resetImage}>\n          <span>Reset</span>\n            <span className=\"icon is-small\">\n            <i className=\"fas fa-eraser\"></i>\n          </span>\n        </button>\n        <button class=\"button\" onClick={downloadCanvas}>\n          <span class=\"icon is-small\">\n            <i class=\"fas fa-download\"></i>\n          </span>\n        </button>\n        </div>\n       \n        \n        \n    </div>\n  );\n};\n\nexport default ImageHarness;","import React, { useState } from \"react\";\n\nconst UploadImage = props => {\n\n  const [imageURI, setImageURI] = useState(\"\");\n\n  const readURI = (e) => {\n    if(e.target.files && e.target.files[0]){\n      let reader = new FileReader();\n      reader.onload = (ev) => {\n        setImageURI(ev.target.result);\n        if (props.onChange !== undefined)\n          props.onChange(ev.target.result); // propagate to parent component\n      }\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n  \n  const handleChange = (e) => {\n    readURI(e);\n    \n  }\n\n  // let imgTag = null;\n  // if (imageURI !== null)\n  //   imgTag = (<div className=\"row\">\n  //               <div className=\"small-9 small-centered columns\">\n  //                 <img className=\"thumbnail\" src={imageURI}></img>\n  //               </div>\n  //             </div>);\n\n  return (\n    <>\n          <div className=\"file is-info mx-1\">\n          <label className=\"file-label\">\n            <input className=\"file-input\" type=\"file\" name=\"resume\"\n              onChange={handleChange}/>\n            <span className=\"file-cta\">\n              <span className=\"file-icon\">\n                <i className=\"fas fa-upload\"></i>\n              </span>\n              <span className=\"file-label\">\n                Upload\n              </span>\n            </span>\n            {/* <span className=\"file-name\">\n              Screen Shot 2017-07-29 at 15.54.25.png\n            </span> */}\n          </label>\n        </div>\n    </>\n  );\n};\n\nexport default UploadImage;","import React, { useState } from \"react\";\n\nconst BuiltInImageDropdown = props => {\n\n  const [dropdown, setDropdown] = useState(false);\n\n  const images = [\n    {\n      name: \"Pasture\",\n      url: \"wp.jpg\"\n    },\n    {\n      name: \"Des Moines\",\n      url: \"iowa.jpg\"\n    },\n\n  ]\n\n  let items = [];\n  for (var i = 0; i < images.length; i++) {\n    let url = images[i].url;\n    items.push( <a onClick={() => {setDropdown(false); props.onChange(`../${url}`); }} className=\"dropdown-item\" key={i + \"a\"}>\n      <div className=\"is-flex\">\n      <figure className=\"image is-48x48 mr-1\">\n        <img className=\"thumbnail\" alt=\"thumbnail\" src={`../${images[i].url}`}/>\n      </figure>\n      <div className=\"is-align-items-center is-flex\">\n      <p className=\"is-size-6\">{images[i].name}</p>\n      </div>\n      \n      </div>\n\n    </a>)\n    if (i !== images.length - 1) {\n      items.push(<hr className=\"dropdown-divider\" key={i + \"hr\"}/>);\n    }\n  }\n\n  return (\n    <>\n      <div className={`dropdown mx-1 ${dropdown ? \"is-active\" : \"\"}`}>\n        <div className=\"dropdown-trigger\">\n          <button className=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu2\" onClick={() => setDropdown(!dropdown)}>\n            <span>Built-In Images</span>\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n            </span>\n          </button>\n        </div>\n        <div className=\"dropdown-menu\" id=\"dropdown-menu2\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {items}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BuiltInImageDropdown;","import \"../customBlocks/customBlocks\";\nimport React, { useState, useEffect } from \"react\";\nimport { BlocklyWorkspace } from \"react-blockly\";\nimport Blockly from \"blockly\";\nimport toolboxConfig from \"../toolbox.js\"\nimport {workspaceRunner, workspaceEnvironment} from \"../workspaceEnvironment\"\nimport defaultWorkspace from \"../defaultWorkspace\";\nimport Lessons from \"../Lessons\";\nimport FilterNavigator from \"../FilterNavigator\";\nimport UploadImage from \"../components/Core/UploadImage\"\nimport BuiltInImageDropdown from \"../components/Core/BuiltInImageDropdown\";\nimport ImageHarness from \"../components/Core/ImageHarness\";\n\nexport default function Create() {\n  const [xml, setXml] = useState(\"\");\n  const [loadedXml, setLoadedXml] = useState(\"\");\n  const [javascriptCode, setJavascriptCode] = useState(\"\");\n  const [workspace, setWorkspace] = useState(null);\n  const [dirty, setDirty] = useState(false);\n  const [filterLoading, setFilterLoading] = useState(true);\n\n  useEffect(() => {\n    document.body.parentElement.style.overflowY = \"hidden\";\n    window.renderFinished = [() => setFilterLoading(false)];\n  }, []);\n\n  function workspaceDidChange(_workspace) {\n    if (workspace === null) setWorkspace(_workspace);\n    \n    // Blockly.JavaScript.addReservedWords(\"image\");\n    // window.LoopTrap = 1000;\n    // Blockly.JavaScript.INFINITE_LOOP_TRAP = 'if(--window.LoopTrap == 0) throw \"Infinite loop.\";\\n';\n    const code = workspaceEnvironment + Blockly.JavaScript.workspaceToCode(_workspace) + workspaceRunner;\n    setJavascriptCode(code);\n  }\n\n  const onXmlChange = (_xml) => {\n    setDirty(loadedXml !== \"\" && xml !== loadedXml);\n    setXml(_xml);\n  }\n\n  const loadXml = (_xml) => {\n    setXml(_xml);\n    setLoadedXml(_xml);\n    setDirty(false);\n    workspace.clear();\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(_xml), workspace)\n  }\n\n  function runCode(code) {\n    setFilterLoading(true); \n    try {\n      window.renderFinished = [() => setFilterLoading(false)];\n      eval(code);\n    } catch (e) {\n      alert(e);\n      //throw e;\n    }    \n  }\n\n  return (\n    <> \n      <div className=\"is-flex create\">\n        <div className=\"blockly-column is-flex is-flex-grow-1 is-flex-direction-column\">\n          <Lessons setXml={loadXml} />\n          <FilterNavigator\n            xml={xml}\n            setXml={loadXml}\n            dirty={dirty}\n          ></FilterNavigator>\n          <BlocklyWorkspace\n          toolboxConfiguration={Blockly.utils.toolbox.convertToolboxDefToJson(toolboxConfig)}\n          initialXml={defaultWorkspace}\n          className=\"fill-height\"\n          workspaceConfiguration={{\n            collapse : true, \n            comments : true, \n            disable : true, \n            maxBlocks : Infinity, \n            grid: {\n              spacing: 20,\n              length: 3,\n              colour: '#ccc',\n              snap: false\n            },\n            renderer: 'thrasos',\n            theme: {\n              'base': 'classic',\n              'componentStyles': {\n                'toolboxBackgroundColour': '#e6e9ef',\n                'flyoutBackgroundColour': '#d2d2d2'\n              },\n              'fontStyle': {\n                \"family\": \"Fredoka, sans-serif\",\n                \"size\": 12\n              },\n            },\n            trashcan : true, \n            horizontalLayout : false, \n            toolboxPosition : 'start', \n            css : true, \n            media : 'https://blockly-demo.appspot.com/static/media/', \n            rtl : false, \n            scrollbars : false, \n            sounds : true, \n            oneBasedIndex : true\n          }}\n          onWorkspaceChange={workspaceDidChange}\n          onXmlChange={onXmlChange}\n          />\n        </div>\n        <div className=\"preview-column is-flex is-flex-direction-column pt-1\">\n          {/* <textarea\n            id=\"code\"\n            style={{ height: \"200px\", width: \"400px\" }}\n            value={javascriptCode}\n            readOnly\n          ></textarea>\n          <button className=\"button\" onClick={() => {navigator.clipboard.writeText(JSON.stringify({xml: xml}))}}>Copy Filter JSON</button>  */}\n          <ImageHarness\n            loading={filterLoading}\n            showRunButton\n            onRunClick={() => {runCode(javascriptCode)}}\n          ></ImageHarness>\n        </div>\n        \n        \n      \n        \n        {/* <pre id=\"generated-xml\">{xml}</pre> */}\n        </div>\n    </>\n  );\n}\n\n","const toolboxConfig = `<xml id=\"toolbox\" style=\"display: none\">\n<category name=\"Colour\" colour=\"#a5745b\">\n<block type=\"colour_picker\">\n<field name=\"COLOUR\">#ff0000</field>\n</block>\n<block type=\"colour_random\"/>\n<block type=\"colour_rgb\">\n<value name=\"RED\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">100</field>\n</shadow>\n</value>\n<value name=\"GREEN\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">50</field>\n</shadow>\n</value>\n<value name=\"BLUE\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">0</field>\n</shadow>\n</value>\n</block>\n<block type=\"color_with_hsv\">\n<value name=\"hue\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">100</field>\n</shadow>\n</value>\n<value name=\"saturation\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">50</field>\n</shadow>\n</value>\n<value name=\"brightness\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">50</field>\n</shadow>\n</value>\n</block>\n<block type=\"colour_blend\">\n<value name=\"COLOUR1\">\n<shadow type=\"colour_picker\">\n<field name=\"COLOUR\">#ff0000</field>\n</shadow>\n</value>\n<value name=\"COLOUR2\">\n<shadow type=\"colour_picker\">\n<field name=\"COLOUR\">#3333ff</field>\n</shadow>\n</value>\n<value name=\"RATIO\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">0.5</field>\n</shadow>\n</value>\n</block>\n</category>\n<category name=\"Pixels\" colour=\"#f0b81f\">\n<block type=\"for_each_pixel\">\n<field name=\"PIXEL_VAR\" id=\"tC?+]3-pPk3|!aUyg,@+\">pixel</field>\n</block>\n<block type=\"get_pixel_relative\"/>\n<block type=\"get_red_of\"/>\n<block type=\"get_green_of\"/>\n<block type=\"get_blue_of\"/>\n<block type=\"get_hue_of\"/>\n<block type=\"get_saturation_of\"/>\n<block type=\"get_brightness_of\"/>\n</category>\n<category name=\"Logic\" colour=\"#5b80a5\">\n<block type=\"controls_if\"/>\n<block type=\"logic_compare\">\n<field name=\"OP\">EQ</field>\n</block>\n<block type=\"logic_operation\">\n<field name=\"OP\">AND</field>\n</block>\n<block type=\"logic_negate\"/>\n<block type=\"logic_boolean\">\n<field name=\"BOOL\">TRUE</field>\n</block>\n<block type=\"logic_null\"/>\n<block type=\"logic_ternary\"/>\n</category>\n<category name=\"Loops\" colour=\"#5ba55b\">\n<block type=\"controls_repeat_ext\">\n<value name=\"TIMES\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">10</field>\n</shadow>\n</value>\n</block>\n<block type=\"controls_whileUntil\">\n<field name=\"MODE\">WHILE</field>\n</block>\n<block type=\"controls_for\">\n<field name=\"VAR\" id=\"4sXmMiOhJD$a*w=*KtX%\">i</field>\n<value name=\"FROM\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">1</field>\n</shadow>\n</value>\n<value name=\"TO\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">10</field>\n</shadow>\n</value>\n<value name=\"BY\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">1</field>\n</shadow>\n</value>\n</block>\n<block type=\"controls_forEach\">\n<field name=\"VAR\" id=\"a2..!lC32\\`oCzQJk@AW]\">j</field>\n</block>\n<block type=\"controls_flow_statements\" disabled=\"true\">\n<field name=\"FLOW\">BREAK</field>\n</block>\n</category>\n<category name=\"Math\" colour=\"#5b67a5\">\n<block type=\"math_number\">\n<field name=\"NUM\">0</field>\n</block>\n<block type=\"math_arithmetic\">\n<field name=\"OP\">ADD</field>\n<value name=\"A\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">1</field>\n</shadow>\n</value>\n<value name=\"B\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">1</field>\n</shadow>\n</value>\n</block>\n<block type=\"math_single\">\n<field name=\"OP\">ROOT</field>\n<value name=\"NUM\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">9</field>\n</shadow>\n</value>\n</block>\n<block type=\"math_trig\">\n<field name=\"OP\">SIN</field>\n<value name=\"NUM\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">45</field>\n</shadow>\n</value>\n</block>\n<block type=\"math_constant\">\n<field name=\"CONSTANT\">PI</field>\n</block>\n<block type=\"math_number_property\">\n<mutation divisor_input=\"false\"/>\n<field name=\"PROPERTY\">EVEN</field>\n<value name=\"NUMBER_TO_CHECK\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">0</field>\n</shadow>\n</value>\n</block>\n<block type=\"math_round\">\n<field name=\"OP\">ROUND</field>\n<value name=\"NUM\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">3.1</field>\n</shadow>\n</value>\n</block>\n<block type=\"math_on_list\">\n<mutation op=\"SUM\"/>\n<field name=\"OP\">SUM</field>\n</block>\n<block type=\"math_modulo\">\n<value name=\"DIVIDEND\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">64</field>\n</shadow>\n</value>\n<value name=\"DIVISOR\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">10</field>\n</shadow>\n</value>\n</block>\n<block type=\"math_constrain\">\n<value name=\"VALUE\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">50</field>\n</shadow>\n</value>\n<value name=\"LOW\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">1</field>\n</shadow>\n</value>\n<value name=\"HIGH\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">100</field>\n</shadow>\n</value>\n</block>\n<block type=\"math_random_int\">\n<value name=\"FROM\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">1</field>\n</shadow>\n</value>\n<value name=\"TO\">\n<shadow type=\"math_number\">\n<field name=\"NUM\">100</field>\n</shadow>\n</value>\n</block>\n<block type=\"math_random_float\"/>\n</category>\n<category name=\"Variables\" colour=\"#a55b80\" custom=\"VARIABLE\">\n<block type=\"variables_get_pixel\">\n<field name=\"FIELD_NAME\">pixel</field>\n</block>\n<block type=\"variables_set_pixel\"/>\n</category>\n<category name=\"Functions\" colour=\"#995ba5\" custom=\"PROCEDURE\"/>\n</xml>`\n\nexport default toolboxConfig;","const defaultWorkspace = `<xml\nxmlns=\"https://developers.google.com/blockly/xml\">\n<variables>\n    <variable id=\"0argu%+[aZPsLM+)t:}(\">pixel</variable>\n</variables>\n<block type=\"for_each_pixel\" id=\"{~CbTV}~[Q42e2ADFK}Q\" x=\"38\" y=\"138\">\n    <field name=\"PIXEL_VAR\" id=\"0argu%+[aZPsLM+)t:}(\">pixel</field>\n    <statement name=\"Loop\">\n        <block type=\"variables_set\" id=\"g\\`lwqhp),#j)mkeCF$t5\">\n            <field name=\"VAR\" id=\"0argu%+[aZPsLM+)t:}(\">pixel</field>\n            <value name=\"VALUE\">\n                <block type=\"colour_rgb\" id=\"Y$hS#9i\\`oc#E@e9#JsaU\">\n                    <value name=\"RED\">\n                        <block type=\"get_red_of\" id=\"-[w)1Wzy:1--Ll0)ilpD\">\n                            <value name=\"NAME\">\n                                <block type=\"variables_get\" id=\"39nZ]@u7~$^c6ZGsnBcc\">\n                                    <field name=\"VAR\" id=\"0argu%+[aZPsLM+)t:}(\">pixel</field>\n                                </block>\n                            </value>\n                        </block>\n                    </value>\n                    <value name=\"GREEN\">\n                        <block type=\"get_green_of\" id=\"(?usMY}6FuS6JugAhNO*\">\n                            <value name=\"NAME\">\n                                <block type=\"variables_get\" id=\"Jx7(^,QF;7o#)6|LWM1=\">\n                                    <field name=\"VAR\" id=\"0argu%+[aZPsLM+)t:}(\">pixel</field>\n                                </block>\n                            </value>\n                        </block>\n                    </value>\n                    <value name=\"BLUE\">\n                        <block type=\"get_blue_of\" id=\"1_UZ.L@5QYF]AY+ofL+b\">\n                            <value name=\"NAME\">\n                                <block type=\"variables_get\" id=\"WQ3X/qFMO2O!t^$~t,YI\">\n                                    <field name=\"VAR\" id=\"0argu%+[aZPsLM+)t:}(\">pixel</field>\n                                </block>\n                            </value>\n                        </block>\n                    </value>\n                </block>\n            </value>\n        </block>\n    </statement>\n</block>\n</xml>`\n\nexport default defaultWorkspace;","import React, { useState, useEffect } from \"react\";\nimport defaultFilters from \"./defaultFilters\";\n\nconst FilterNavigator = props => {\n\n  const [dropdown, setDropdown] = useState(false);\n\n  const [filterInput, setFilterInput] = useState(\"\");\n\n  const [filters, setFilters] = useState({filters: []});\n\n  function getFiltersFromStorage() {\n    let filters = localStorage.getItem(\"userFilters\");\n    if (filters === null) {\n      localStorage.setItem(\"userFilters\", `{\"filters\": []}`);\n    }\n    return filters === null ? {filters: []} : JSON.parse(filters);\n  }\n\n  function updateFiltersInStorage(newFilters) {\n    localStorage.setItem(\"userFilters\", JSON.stringify(newFilters));\n  }\n\n  function isFilterInStorage(name) {\n    if (filters === null) return false;\n    return filters.filters.find(elt => elt.name === name) !== undefined;\n  }\n\n  function isFilterDefault(name) {\n    return defaultFilters.filters.find(elt => elt.name === name) !== undefined;\n  }\n\n  useEffect(() => {\n    setFilters(getFiltersFromStorage());\n  }, []);\n\n  const onSaveClicked = () => {\n    console.log(filterInput);\n    \n    if (isFilterInStorage(filterInput)) {\n      // update in local storage\n      let newFilters = filters.filters;\n      newFilters = newFilters.map((e) => {\n        if (e.name === filterInput) {\n          e.time = Date.now();\n          e.xml = props.xml;\n        }\n        return e;\n      });\n      props.setXml(props.xml);\n      setFilters({ ...filters, filters: newFilters });\n      updateFiltersInStorage({ ...filters, filters: newFilters });\n    } else {\n      let newFilters = filters.filters;\n      newFilters.push({name: filterInput, time: Date.now(), xml: props.xml});\n      props.setXml(props.xml);\n      setFilters({ ...filters, filters: newFilters });\n      updateFiltersInStorage({ ...filters, filters: newFilters });\n    }\n  }\n\n  function FilterItem(filterProps) {\n    const onEditClicked = () => {\n      setDropdown(false);\n      setFilterInput(filterProps.filter.name);\n      console.log(filterProps)\n      props.setXml(filterProps.filter.xml);\n    }\n\n    const onDeleteClicked = () => {\n      setDropdown(false);\n      let newFilters = filters.filters;\n      newFilters = newFilters.filter((e) => e.name !== filterProps.filter.name);\n      setFilters({ ...filters, filters: newFilters });\n      updateFiltersInStorage({ ...filters, filters: newFilters });\n\n      if (filterProps.filter.name === filterInput) {\n        setFilterInput(\"\");\n      }\n    }\n\n\n    const editButton = filterProps.isDefault ? <></> :\n      <p className=\"control\">\n        <button className=\"button is-white \" onClick={onEditClicked}>\n          <span className=\"icon is-small is-right\"><i className=\"fas fa-pen-to-square\"></i></span>\n        </button>\n      </p>\n\n    const deleteButton = filterProps.isDefault ? <></> :\n      <p className=\"control\">\n        <button className=\"button is-white\" onClick={onDeleteClicked}>\n          <span className=\"icon is-small is-right\"><i className=\"fas fa-trash\"></i></span>\n        </button>\n      </p>\n\n    const loadButton = !filterProps.isDefault ? <></> :\n    <p className=\"control\">\n      <button className=\"button is-white \" onClick={onEditClicked}>\n        <span className=\"icon is-small is-right\"><i className=\"fas fa-arrow-down\"></i></span>\n      </button>\n    </p>\n\n    return (\n      <div className=\"dropdown-item level filter-item\">\n                  <div className=\"level-left\">\n                    <div className=\"level-item\">\n                      <p>{filterProps.filter.name}</p>\n                    </div>\n                  </div>\n                  <div className=\"level-right\">\n                    <div className=\"field is-grouped level-item\">\n                        {editButton}\n                        {deleteButton}\n                        {loadButton}\n                    </div>\n                  </div>\n                </div>\n    );\n  }\n\n  let saveBtnClass = \"button save-btn is-outline\";\n  let saveBtnDisabled = false;\n  let showUnsavedMessage = false;\n  let showNewFilterMessage = false;\n  if (filterInput === \"\") {\n    saveBtnDisabled = true;\n  } else if (!isFilterInStorage(filterInput) && !isFilterDefault(filterInput)) {\n    saveBtnClass += \" is-success\";\n    showNewFilterMessage = true && !dropdown;\n  } else if (props.dirty && !isFilterDefault(filterInput)) {\n    saveBtnClass += \" is-danger\"\n    showUnsavedMessage = true && !dropdown;\n  } else if (isFilterDefault(filterInput)) {\n    saveBtnDisabled = true;\n  }\n\n  let unsaved = <></>;\n  let newFilter = <></>\n  if (showUnsavedMessage) {\n    unsaved = <article className=\"message is-danger unsaved-message\">\n      <div className=\"message-body\">\n      You have unsaved changes.\n      </div>\n    </article>\n  } else if (showNewFilterMessage) {\n    newFilter = <article className=\"message is-success unsaved-message\">\n      <div className=\"message-body\">\n        Press save to save your new filter!\n      </div>\n    </article>\n  }\n  filters.filters.sort((a, b) => {\n    return a.time > b.time\n  });\n\n  const filtersDropdownItems = filters.filters.length === 0 ? <></> :\n    <>\n    <div className=\"dropdown-item dropdown-separator\">Your Filters</div>\n    {filters.filters.map(e => \n        <FilterItem filter={e}/>\n      )}\n      <hr className=\"dropdown-divider\"></hr>\n    </>\n\n  return (\n    <>\n      <div className={`dropdown is-up filter-navigator ${dropdown ? \"is-active\" : \"\"}`}>\n        <div className=\"dropdown-trigger\">\n           {unsaved}\n           {newFilter}\n            <div className=\"field has-addons\">\n                <div className=\"control\">\n                    <input className=\"input\" type=\"text\" placeholder=\"Enter filter name to save!\"\n                      value={filterInput}\n                      onChange={(e) => setFilterInput(e.target.value)}/>\n                </div>\n                <div className=\"control\">\n                  <button className={saveBtnClass} disabled={saveBtnDisabled} onClick={onSaveClicked}>\n                    <span className=\"icon is-small is-right\"><i className=\"fas fa-floppy-disk\"></i></span>\n                  </button>\n                </div>\n                <div className=\"control\">\n                  <button className=\"button is-outlined\" onClick={() => setDropdown(!dropdown)}>\n                    <span className=\"icon is-small is-right\"><i className=\"fas fa-angle-up\"></i></span>\n                  </button>\n                </div>\n\n            </div>\n        </div>\n        <div className=\"dropdown-menu\" id=\"filter-dropdown-menu\" role=\"menu\">\n            <div className=\"dropdown-content filter-dropdown-content\">\n                {filtersDropdownItems}\n                <div className=\"dropdown-item dropdown-separator\">Built-in Filters</div>\n                {defaultFilters.filters.map(e => \n                    <FilterItem isDefault filter={e}/>\n                  )}\n            </div>\n        </div>\n    </div>\n    </>\n  );\n};\n\nexport default FilterNavigator;","import React, { useState, useEffect } from \"react\";\nimport ImageHarness from '../components/Core/ImageHarness';\nimport FilterSelector from '../components/Filters/FilterSelector';\nimport {workspaceRunnerPersist, workspaceEnvironment} from \"../workspaceEnvironment\"\nimport Blockly from \"blockly\";\n\nconst Filters = () => {\n\n  const [workspace, setWorkspace] = useState(null);\n  const [filterLoading, setFilterLoading] = useState(true);\n\n  useEffect(() => {\n    document.body.parentElement.style.overflowY = \"scroll\";\n    var ws = new Blockly.Workspace();\n    setWorkspace(ws);\n    window.renderFinished = [() => setFilterLoading(false)];\n  }, []);\n\n  const applyFilter = (xml, onFinish = null) => {\n    workspace.clear();\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), workspace)\n    const code = workspaceEnvironment + Blockly.JavaScript.workspaceToCode(workspace) + workspaceRunnerPersist;\n    try {\n      if (onFinish !== null) {\n        window.renderFinished = [onFinish, () => setFilterLoading(false)]\n      }\n      setFilterLoading(true);\n      let ret = eval(code);\n    } catch (e) {\n      alert(e);\n      //throw e;\n    }  \n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"columns\">\n        <div className=\"column\">\n          <div className=\"harness-fixed my-5\">\n          <ImageHarness loading={filterLoading}/>\n          </div>\n          \n        </div>\n        <div className=\"column filters-column\">\n          <FilterSelector\n            setXml={applyFilter}\n            filterLoading={filterLoading}\n          ></FilterSelector>\n        </div>\n      </div>\n      \n      \n    </div>\n  );\n};\n\nexport default Filters;\n","import React, { useState, useEffect } from \"react\";\nimport defaultFilters from \"../../defaultFilters\";\n\nfunction FilterItem(filterProps) {\n  const [loading, setLoading] = useState(false);\n   \n  // useEffect(() => {\n  //   if (!filterProps.filterLoading) {\n  //     //setLoading(false);\n  //     console.log(\"changing back\")\n  //   }\n  // }, [filterProps.filterLoading])\n\n  const onApplyClicked = () => {\n    setLoading(true);\n    console.log(loading);\n    filterProps.setXml(filterProps.filter.xml, () => {setLoading(false)});\n  }\n\n  return (\n      <div className=\"card mb-2\">\n      <header className=\"card-header\">\n          <p className=\"card-header-title\">\n          {filterProps.filter.name}\n          </p>\n          <div className=\"card-header-icon\" aria-label=\"more options\">\n          <button className={`button is-success ${loading ? \"is-loading\" : \"\"}`} onClick={onApplyClicked}>\n              <span>Apply</span>\n                  <span className=\"icon is-small\">\n                  <i className=\"fas fa-wand-magic-sparkles\"></i>\n                  </span>\n              </button>\n          </div>\n      </header>\n      </div>\n  );\n}\n\nconst FilterSelector = props => {\n\n    const [filters, setFilters] = useState({filters: []});\n   \n\n    function getFiltersFromStorage() {\n      let filters = localStorage.getItem(\"userFilters\");\n      if (filters === null) {\n        localStorage.setItem(\"userFilters\", `{\"filters\": []}`);\n      }\n      return filters === null ? {filters: []} : JSON.parse(filters);\n    }\n\n    useEffect(() => {\n        setFilters(getFiltersFromStorage());\n      }, []);\n  \n\n  return (\n    <>\n    <div className=\"content\">\n        <h1>Built-In Filters</h1>\n    </div>\n        {defaultFilters.filters.map(e => \n                    <FilterItem key={e.name} filter={e}\n                      setXml={props.setXml} filterLoading={props.filterLoading}/>\n                  )}\n    <div className=\"content mt-5\">\n        <h1>Your Filters</h1>\n    </div>             \n    {filters.filters.map(e => \n                    <FilterItem key={e.name} filter={e}\n                    setXml={props.setXml} filterLoading={props.filterLoading}/>\n                  )}\n        \n    </>\n  );\n};\n\nexport default FilterSelector;","const data = [\n  {\n    \"title\": \"Lesson 0 - Introduction to Camelot\",\n    \"text\": <><p>Welcome to Camelot! At the top of the screen, you’ll find the lessons bar that will walk you through introductory principles in image filter creation. Below the lessons bar, you’ll find the block workspace, where you can drag-and-drop blocks from the toolbox on the left to create filters. On the right is the image preview, where you can run your current filter, and swap out the preview image or use your own.</p><p>Some lessons contain starter material that will help you get started. Go ahead and click on “Load Starter Material” to load a sample filter, and hit Run Filter to see it in action!</p></>,\n    \"xml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><variables><variable id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</variable><variable id=\\\"$.nhVqw;v*UWWeTcJFT$\\\">temp</variable></variables><block type=\\\"for_each_pixel\\\" id=\\\"{~CbTV}~[Q42e2ADFK}Q\\\" x=\\\"139\\\" y=\\\"88\\\"><field name=\\\"PIXEL_VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><statement name=\\\"Loop\\\"><block type=\\\"variables_set\\\" id=\\\"|OPsofk_pMP+HfqE3Q:6\\\"><field name=\\\"VAR\\\" id=\\\"$.nhVqw;v*UWWeTcJFT$\\\">temp</field><value name=\\\"VALUE\\\"><block type=\\\"colour_rgb\\\" id=\\\"Y$hS#9i`oc#E@e9#JsaU\\\"><value name=\\\"RED\\\"><block type=\\\"get_red_of\\\" id=\\\"-[w)1Wzy:1--Ll0)ilpD\\\"><value name=\\\"NAME\\\"><block type=\\\"get_pixel_relative\\\" id=\\\"!1G=(pH==UE_{PSBvzQ2\\\"><field name=\\\"X_VAL\\\">3</field><field name=\\\"Y_VAL\\\">5</field><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"39nZ]@u7~$^c6ZGsnBcc\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value></block></value><value name=\\\"GREEN\\\"><block type=\\\"get_green_of\\\" id=\\\"(?usMY}6FuS6JugAhNO*\\\"><value name=\\\"NAME\\\"><block type=\\\"get_pixel_relative\\\" id=\\\"WaR:$u-LIZ+ioB|fE=xw\\\"><field name=\\\"X_VAL\\\">0</field><field name=\\\"Y_VAL\\\">-5</field><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"uf,R3#{gU,c|UWMOJIFw\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value></block></value><value name=\\\"BLUE\\\"><block type=\\\"get_blue_of\\\" id=\\\"1_UZ.L@5QYF]AY+ofL+b\\\"><value name=\\\"NAME\\\"><block type=\\\"get_pixel_relative\\\" id=\\\"k-WbIx|g|-X@c.]D4,Tt\\\"><field name=\\\"X_VAL\\\">-3</field><field name=\\\"Y_VAL\\\">5</field><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"bARRxPYQeIIWQJLb$[Po\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value></block></value></block></value><next><block type=\\\"variables_set\\\" id=\\\"g`lwqhp),#j)mkeCF$t5\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><value name=\\\"VALUE\\\"><block type=\\\"color_with_hsv\\\" id=\\\"(7snXD8OgK,@;{qEAQ#~\\\"><value name=\\\"hue\\\"><shadow type=\\\"math_number\\\" id=\\\"o[fe/YF@M_!?K[GUG+tU\\\"><field name=\\\"NUM\\\">100</field></shadow><block type=\\\"get_hue_of\\\" id=\\\"fj*dChE~2vf4O.(HT;Mx\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"bc0XjK86tEsC+uRCXbgS\\\"><field name=\\\"VAR\\\" id=\\\"$.nhVqw;v*UWWeTcJFT$\\\">temp</field></block></value></block></value><value name=\\\"saturation\\\"><shadow type=\\\"math_number\\\" id=\\\"9i(t|paa,T{{U3QB/wDU\\\"><field name=\\\"NUM\\\">50</field></shadow><block type=\\\"math_arithmetic\\\" id=\\\"-7?ZvvU%tqLHpzE+q~mo\\\"><field name=\\\"OP\\\">MULTIPLY</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\" id=\\\"c-d19SN#tJdTHf@-OJV9\\\"><field name=\\\"NUM\\\">1.5</field></shadow></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"5*R~9{8D:.*S7^:Cr|3J\\\"><field name=\\\"NUM\\\">1</field></shadow><block type=\\\"get_saturation_of\\\" id=\\\"K?yuE6Onzf~%SY|#}=%,\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"{yp=d#qc{Ux_E2u~/fAH\\\"><field name=\\\"VAR\\\" id=\\\"$.nhVqw;v*UWWeTcJFT$\\\">temp</field></block></value></block></value></block></value><value name=\\\"brightness\\\"><shadow type=\\\"math_number\\\" id=\\\"}^{bSj4m0QJ+q|E2oL7Z\\\"><field name=\\\"NUM\\\">50</field></shadow><block type=\\\"get_brightness_of\\\" id=\\\"sl(ff{;Ga`j3y~TD*@UX\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"BpqE2Eggb]a[.31E,m[m\\\"><field name=\\\"VAR\\\" id=\\\"$.nhVqw;v*UWWeTcJFT$\\\">temp</field></block></value></block></value></block></value></block></next></block></statement></block></xml>\"\n  },\n  {\n    \"title\": \"Lesson 1 - Introduction to Colour Blocks\",\n    \"text\": <><p>To get started, you should know that images are made up of dots of colour called pixels; each pixel has a certain amount of red, green, and blue in that spot, which combine to determine the colour of the pixel.</p>\n    <p>Let’s think of the simplest filter we can: the filter that does nothing at all! (We will get into more exciting filters soon.) To do this, we will look at each dot of colour one-by-one, we will record its colour, and we will leave it the same as it was. Let’s walk through the blocks we will need to do this.</p><ul>\n    <li>The <code>for each pixel in image</code> block looks at every pixel in the image. We put this as the outermost block since this is the most basic thing we need to do. </li>\n    <li>The <code>set pixel to</code> block lets you give a new colour to the pixel at that location. We put this directly inside the <code>for each pixel</code> block, since we wish to give a colour to each pixel in the image. </li>\n    <li>The <code>colour with red, green, blue</code> block lets you specify the value of red, green, and blue for a pixel. We put this inside the <code>set pixel to</code> block, since pixels take red, green, and blue values to determine their colour.</li>\n    <li>Lastly, the <code>get red of</code>, <code>get green of</code>, and <code>get blue of</code> blocks extract the red, green, and blue values of the pixel at that location. </li>\n    </ul>\n    Putting this all together, since we are doing nothing in this filter, we simply set each pixel to the colour it already had. We do this by colouring it with the red, green, and blue values it already had, using <code>get red of</code>, <code>get green of</code>, and <code>get blue of</code> to extract the exact <code>pixel</code>values. \n    </>,\n    \"xml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><variables><variable id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</variable></variables><block type=\\\"for_each_pixel\\\" id=\\\"{~CbTV}~[Q42e2ADFK}Q\\\" x=\\\"38\\\" y=\\\"138\\\"><field name=\\\"PIXEL_VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><statement name=\\\"Loop\\\"><block type=\\\"variables_set\\\" id=\\\"g`lwqhp),#j)mkeCF$t5\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></statement></block><block type=\\\"get_red_of\\\" id=\\\"-[w)1Wzy:1--Ll0)ilpD\\\" x=\\\"445\\\" y=\\\"148\\\"></block><block type=\\\"variables_get\\\" id=\\\"39nZ]@u7~$^c6ZGsnBcc\\\" x=\\\"612\\\" y=\\\"146\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block><block type=\\\"colour_rgb\\\" id=\\\"Y$hS#9i`oc#E@e9#JsaU\\\" x=\\\"274\\\" y=\\\"169\\\"></block><block type=\\\"get_green_of\\\" id=\\\"(?usMY}6FuS6JugAhNO*\\\" x=\\\"447\\\" y=\\\"201\\\"></block><block type=\\\"variables_get\\\" id=\\\"Jx7(^,QF;7o#)6|LWM1=\\\" x=\\\"607\\\" y=\\\"197\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block><block type=\\\"get_blue_of\\\" id=\\\"1_UZ.L@5QYF]AY+ofL+b\\\" x=\\\"450\\\" y=\\\"267\\\"></block><block type=\\\"variables_get\\\" id=\\\"WQ3X/qFMO2O!t^$~t,YI\\\" x=\\\"603\\\" y=\\\"269\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></xml>\"\n  },\n  {\n    \"title\": \"Lesson 2 - Changing Colour Intensities\",\n    \"text\": <><p>The goal of this lesson is to implement a filter that intensifies the redness of the image. As discussed in the previous lesson, you already have the necessary blocks to modify the colour of every pixel in the image. In the previous lesson, you set the colour of each pixel to the current values of red, green, and blue of the pixel. This means that the image colours stay the same. Our goal is to change that! Given that colours are represented by a range of numeric values, how can you make a filter which intensifies the redness of the image?</p>\n    <p>Hint: Try increasing the value of the red in each pixel. (The provided block can be found in the math section.)</p></>,\n    \"xml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><variables><variable id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</variable></variables><block type=\\\"math_arithmetic\\\" id=\\\"pWGrJrLmb./9.Cc83.T8\\\" x=\\\"395\\\" y=\\\"100\\\"><field name=\\\"OP\\\">ADD</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\" id=\\\"3cwx*K*07Kxc!YdN#`7z\\\"><field name=\\\"NUM\\\">1</field></shadow></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"u;6_Td3ZhFdju{P]9Ad=\\\"><field name=\\\"NUM\\\">1</field></shadow></value></block><block type=\\\"for_each_pixel\\\" id=\\\"{~CbTV}~[Q42e2ADFK}Q\\\" x=\\\"38\\\" y=\\\"138\\\"><field name=\\\"PIXEL_VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><statement name=\\\"Loop\\\"><block type=\\\"variables_set\\\" id=\\\"g`lwqhp),#j)mkeCF$t5\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><value name=\\\"VALUE\\\"><block type=\\\"colour_rgb\\\" id=\\\"Y$hS#9i`oc#E@e9#JsaU\\\"></block></value></block></statement></block></xml>\"\n  },\n  {\n    \"title\": \"Lesson 3 - Image Inversion\",\n    \"text\": <><p>The goal of this lesson is to invert the image. If you have never seen an inverted image it is completely reversing the colour of an image. To be able to do this we need to understand that the values of the colours of a pixel have a range. This range is 255-0. This controls the intensity or amount of a colour. For example, if the red pixel had a value of 255 that would be the most intense red possible. </p>\n    <p>Each pixel has a red, green, and blue value ranging from 255-0. To invert an image we will need to invert every channel. The red channel is done for you; now try to do the other ones!</p></>,\n    \"xml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><variables><variable id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</variable></variables><block type=\\\"for_each_pixel\\\" id=\\\"{~CbTV}~[Q42e2ADFK}Q\\\" x=\\\"96\\\" y=\\\"118\\\"><field name=\\\"PIXEL_VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><statement name=\\\"Loop\\\"><block type=\\\"variables_set\\\" id=\\\"g`lwqhp),#j)mkeCF$t5\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><value name=\\\"VALUE\\\"><block type=\\\"colour_rgb\\\" id=\\\"Y$hS#9i`oc#E@e9#JsaU\\\"><value name=\\\"RED\\\"><block type=\\\"math_arithmetic\\\" id=\\\":@Tf$U]#~c1bgEUCs1t.\\\"><field name=\\\"OP\\\">MINUS</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\" id=\\\"kTc0^6^E!GTQ_+[wj~|S\\\"><field name=\\\"NUM\\\">255</field></shadow></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"`=hxl%DW.;,LA|6VB{X`\\\"><field name=\\\"NUM\\\">1</field></shadow><block type=\\\"get_red_of\\\" id=\\\"-[w)1Wzy:1--Ll0)ilpD\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"39nZ]@u7~$^c6ZGsnBcc\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value></block></value><value name=\\\"GREEN\\\"><block type=\\\"get_green_of\\\" id=\\\"(?usMY}6FuS6JugAhNO*\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"Jx7(^,QF;7o#)6|LWM1=\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value><value name=\\\"BLUE\\\"><block type=\\\"get_blue_of\\\" id=\\\"1_UZ.L@5QYF]AY+ofL+b\\\"><value name=\\\"NAME\\\"><block type=\\\"variables_get\\\" id=\\\"WQ3X/qFMO2O!t^$~t,YI\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></value></block></value></block></value></block></statement></block></xml>\"\n    \n  },\n  {\n    \"title\": \"Lesson 4 - If Statements\",\n    \"text\": <><p>In a previous lesson, we saw how for loops can be used to look at every pixel in the image and set its colour, thus creating an image filter. But what if we wanted to apply a filter to just one part? For instance, you now know how to invert the colours of an image. Can you make a filter that only inverts the colors of the sky?</p>\n    <p>To do this, you would need an if statement, which checks for a condition, and if the condition is true, then it applies the inversion code. Here the condition will be on the blue value of the pixel, since we only want to affect the sky. We have provided some of the pieces you need for the <code>if</code> part: the <code>if do</code> block and the conditional comparison block; can you figure out the rest of what is needed? (For future reference, these blocks can be found in the Logic section.)</p>\n    <p>You should already know everything you need for the <code>do</code> part. Now put it all together to make the filter!</p>\n    <p>Hint: The sky encompasses all blue values over 100.</p>\n    </>,\n    \"xml\":\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><variables><variable id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</variable></variables><block type=\\\"for_each_pixel\\\" id=\\\"{~CbTV}~[Q42e2ADFK}Q\\\" x=\\\"46\\\" y=\\\"51\\\"><field name=\\\"PIXEL_VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field><statement name=\\\"Loop\\\"><block type=\\\"controls_if\\\" id=\\\"$S/j8PAo`STmy3DM+E_h\\\"><statement name=\\\"DO0\\\"><block type=\\\"variables_set\\\" id=\\\"g`lwqhp),#j)mkeCF$t5\\\"><field name=\\\"VAR\\\" id=\\\"0argu%+[aZPsLM+)t:}(\\\">pixel</field></block></statement></block></statement></block><block type=\\\"logic_compare\\\" id=\\\"6}/%yp-Z%Z(t9=5#MA}.\\\" x=\\\"311\\\" y=\\\"58\\\"><field name=\\\"OP\\\">EQ</field></block></xml>\"\n        \n  },\n]\n\nexport default data;","import React, { useState} from \"react\";\n// import styles from \"./Lessons.module.css\"\n// import {Text, StyleSheet} from \"react-native\";\nimport data from './LessonData'\n\nconst Lessons = props => {\n  // const [lessonText, setLessonTest] = useState([\n  //   {\n  //     title: \"Lesson 1\",\n  //     text: \"To get started, you should know that images are made up of pixels.\",\n  //   },\n  //   {\n  //     title: \"Lesson 2\",\n  //     text: \"Now, we're going to try building a basic block with a for loop.\",\n  //   },\n  //   {\n  //     title: \"Lesson 3\",\n  //     text: \"Let's introduce you to if statements.\",\n  //   }\n  // ])\n  const [lessonText] = useState(data)\n\n  // const showFile = async (e) => {\n  //   e.preventDefault()\n  //   const reader = new FileReader()\n  //   reader.onload = async (e) => { \n  //     const text = (e.target.result)\n  //     console.log(text)\n  //     alert(text)\n  //   };\n  //   reader.readAsText(e.target.files[0])\n  // }\n\n  const [status, setStatus] = useState ({\n    index: 0,\n    disabledPrev: true,\n    disabledNext: false\n  })\n  \n  const resetScroll = () => {\n    document.getElementById('lessons-msg-body').scrollTop = 0;\n  }\n\n  const togglePrev = (e) => {\n    resetScroll();\n    console.log(status)\n    let index = status.index - 1;\n    let disabledPrev = (index === 0);\n\n    setStatus({\n      index: index, \n      disabledPrev: disabledPrev,\n      disabledNext: false\n    })\n  }\n\n  const toggleNext = (e) => {\n    resetScroll();\n    let index = status.index + 1;\n    let disabledNext = index === (lessonText.length - 1);\n\n    setStatus({\n      index: index, \n      disabledPrev: false,\n      disabledNext: disabledNext \n    })\n  }\n\n  function Prev(props) {\n    return (\n      <button class=\"button is-small is-outlined\" onClick={props.toggle} disabled={props.active}>Previous</button>\n    );\n  }\n  \n  function Next(props) {\n    return (\n      <button class=\"button is-small is-outlined\" onClick={props.toggle} disabled={props.active}>Next</button>\n    );\n  }\n\n  var showLoadBtn = lessonText[status.index].hasOwnProperty('xml');\n\n  return (\n    <div class=\"block lessons-msg-block\"> \n      <div class=\"message lessons-msg\">\n      <div class=\"message-header is-flex is-justify-content-space-between\">\n        <p className=\"msg-p\">{lessonText[status.index].title}</p>\n        <button className={`button load-btn is-info ${showLoadBtn ? \"\" : \"is-hidden\"}`} onClick={() => {props.setXml(lessonText[status.index].xml)}}>Load Starter Material</button>\n      </div>\n      <div class=\"message-body lessons-msg-body\" id=\"lessons-msg-body\">\n        <div className=\"content\">\n          {lessonText[status.index].text}\n        </div>\n        \n        <div>\n          <Prev toggle={(e) => togglePrev(e)} active={status.disabledPrev} />\n          <Next toggle={(e) => toggleNext(e)} active={status.disabledNext} />\n        </div>\n      </div>\n    </div>\n\n    {/* <div className={styles.box}>\n      <h1 className={styles.title}>{lessonText[status.index].title}</h1>\n      <p>\n      {lessonText[status.index].text}\n      </p>\n      <div>\n        <Prev toggle={(e) => togglePrev(e)} active={status.disabledPrev} />\n        <Next toggle={(e) => toggleNext(e)} active={status.disabledNext} />\n      </div>\n    </div> */}\n    </div>\n  );\n};\n\n// const styles = StyleSheet.create({\n//   baseText: {\n//     fontFamily: \"Cochin\"\n//   },\n// });\n\nexport default Lessons;","import Blockly from 'blockly';\nimport 'blockly/python';\nimport 'blockly/javascript';\n\n// Block for variable getter.\nBlockly.Blocks['variables_get_pixel'] = {\n    init: function() {\n      this.appendDummyInput()\n        .appendField(new Blockly.FieldVariable(\n            \"VAR_NAME\", ['Pixel'], 'Pixel'), \"FIELD_NAME\");\n      this.setOutput(true, 'Pixel');\n    }\n  };\n  \n  // Block for variable setter.\n  Blockly.Blocks['variables_set_pixel'] = {\n    init: function() {\n      this.appendValueInput(\"NAME\")\n          .setCheck('Pixel')\n          .appendField(\"smet\")\n          .appendField(new Blockly.FieldVariable(\n              \"VAR_NAME\", null, ['Pixel'], 'Pixel'), \"FIELD_NAME\")\n          .appendField(\"to\");\n          this.setPreviousStatement(true, null);\n          this.setNextStatement(true, null);\n    }\n  };\n\n  Blockly.Blocks['get_pixel_relative'] = {\n    init: function() {\n      this.appendValueInput(\"NAME\")\n        .setCheck(null)\n        .appendField(\"get pixel\")\n        .appendField(new Blockly.FieldNumber(0), \"X_VAL\")\n        .appendField(\"right and\")\n        .appendField(new Blockly.FieldNumber(0), \"Y_VAL\")\n        .appendField(\"up\");\n        this.setOutput(true, null);\n        this.setColour(170);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.JavaScript['get_pixel_relative'] = function(block) {\n  var x_val = block.getFieldValue('X_VAL');\n  var y_val = block.getFieldValue('Y_VAL');\n  var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC);\n  var code = `(rgba == null ? 0 : colorToHex(getFromOriginal(rgba.locationXY().x + ${x_val}, rgba.locationXY().y - 1 + ${y_val})))`;\n  if (value_name === \"\") code = 0;\n  return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\n  Blockly.Blocks['get_red_of'] = {\n    init: function() {\n        this.appendValueInput(\"NAME\")\n            .setCheck(\"Pixel\")\n            .appendField(\"get red of\");\n        this.setOutput(true, null);\n        this.setColour(0);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n    }\n};\n\n// Blockly.Blocks['get_color_pixel_relative'] = {\n//   init: function() {\n//     this.appendValueInput(\"NAME\")\n//       .setCheck(null)\n//       .appendField(\"get color of pixel\")\n//       .appendField(new Blockly.FieldNumber(0), \"X_VAL\")\n//       .appendField(\"right and\")\n//       .appendField(new Blockly.FieldNumber(0), \"Y_VAL\")\n//       .appendField(\"up\");\n//       this.setOutput(true, null);\n//       this.setColour(20);\n//   this.setTooltip(\"\");\n//   this.setHelpUrl(\"\");\n//   }\n// };\n\n// Blockly.JavaScript['get_color_pixel_relative'] = function(block) {\n// var x_val = block.getFieldValue('X_VAL');\n// var y_val = block.getFieldValue('Y_VAL');\n// var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC);\n// var code = `(rgba == null ? 0 : colorToHex(getFromOriginal(rgba.locationXY().x + ${x_val}, rgba.locationXY().y - 1 + ${y_val})))`;\n// if (value_name === \"\") code = 0;\n// return [code, Blockly.JavaScript.ORDER_ATOMIC];\n// };\n\nBlockly.Blocks['get_red_of'] = {\n  init: function() {\n      this.appendValueInput(\"NAME\")\n          .setCheck(\"Pixel\")\n          .appendField(\"get red of\");\n      this.setOutput(true, null);\n      this.setColour(0);\n  this.setTooltip(\"\");\n  this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.JavaScript['get_red_of'] = function(block) {\n    var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC);\n    var code = `(${value_name} == null ? 0 : parseInt(${value_name}.slice(1, 3), 16))`;\n    if (value_name === \"\") code = 0;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\n\n  Blockly.Blocks['get_green_of'] = {\n    init: function() {\n        this.appendValueInput(\"NAME\")\n            .setCheck(\"Pixel\")\n            .appendField(\"get green of\");\n        this.setOutput(true, null);\n        this.setColour(130);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.JavaScript['get_green_of'] = function(block) {\n    var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC);\n    var code = `(${value_name} == null ? 0 : parseInt(${value_name}.slice(3, 5), 16))`;\n    if (value_name === \"\") code = 0;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.Blocks['get_blue_of'] = {\n    init: function() {\n        this.appendValueInput(\"NAME\")\n            .setCheck(\"Pixel\")\n            .appendField(\"get blue of\");\n        this.setOutput(true, null);\n        this.setColour(240);\n    this.setTooltip(\"\");\n    this.setHelpUrl(\"\");\n    }\n};\n\nBlockly.JavaScript['get_blue_of'] = function(block) {\n    var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC);\n    var code = `(${value_name} == null ? 0 : parseInt(${value_name}.slice(5, 7), 16))`;\n    if (value_name === \"\") code = 0;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.Blocks['for_each_pixel'] = {\n    init: function() {\n        this.jsonInit({\n            \"type\": \"for_each_pixel\",\n            \"message0\": \"for each %1 in image\",\n            \"args0\": [\n              {\n                \"type\": \"field_variable\",\n                \"name\": \"PIXEL_VAR\",\n                \"variable\": \"pixel\"\n              },\n            ],\n            \"message1\": \"do %1\",\n            \"args1\": [\n              {\n                \"type\": \"input_statement\",\n                \"name\": \"Loop\"\n              }\n            ],\n            'inputsInline': true,\n            \"colour\": 170,\n            \"tooltip\": \"Does something for each pixel in the image.\",\n            \"helpUrl\": \"\"\n          })\n    }\n}\n\n\nBlockly.JavaScript['for_each_pixel'] = function(block) {\n    var variable0  = Blockly.JavaScript.variableDB_.getName(block.getFieldValue('PIXEL_VAR'), Blockly.Variables.NAME_TYPE);\n    //var value_pixel = Blockly.JavaScript.valueToCode(block, 'Pixel', Blockly.JavaScript.ORDER_ATOMIC);\n    let branch = Blockly.JavaScript.statementToCode(block, 'Loop');\n    \n    let code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    // const indexVar = Blockly.JavaScript.variableDB_.getDistinctName(\n    //     variable0 + '_index', Blockly.Names.VARIABLE);\n    branch = Blockly.JavaScript.INDENT + variable0 + ' = colorToHex(rgba);' + branch\n    branch += `;\n    var rgba_new = hexToColor(${variable0});\n    if (Math.random() < 0.001) {\n      // do any console debugging here\n    }\n    \n    rgba.r = rgba_new.r;\n    rgba.g = rgba_new.g;\n    rgba.b = rgba_new.b;\n    `\n    \n    code += `\n    Caman.Filter.register(\"currentFilter\", function () {\n        this.process(\"currentFilter\", function (rgba) {\n            ${branch}\n        });\n        return this;\n      });\n    `;\n    return code;\n};\n\nBlockly.JavaScript['colour_rgb'] = function(block) {\n    // Compose a colour from RGB components expressed as percentages.\n    const red = Blockly.JavaScript.valueToCode(block, 'RED', Blockly.JavaScript.ORDER_NONE) || 0;\n    const green =\n        Blockly.JavaScript.valueToCode(block, 'GREEN', Blockly.JavaScript.ORDER_NONE) || 0;\n    const blue =\n        Blockly.JavaScript.valueToCode(block, 'BLUE', Blockly.JavaScript.ORDER_NONE) || 0;\n    const functionName = Blockly.JavaScript.provideFunction_('colourRgb', [\n      'function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + '(r, g, b) {',\n      '  r = Math.max(Math.min(Number(r), 255), 0);',\n      '  g = Math.max(Math.min(Number(g), 255), 0);',\n      '  b = Math.max(Math.min(Number(b), 255), 0);',\n      '  r = (\\'0\\' + (Math.round(r) || 0).toString(16)).slice(-2);',\n      '  g = (\\'0\\' + (Math.round(g) || 0).toString(16)).slice(-2);',\n      '  b = (\\'0\\' + (Math.round(b) || 0).toString(16)).slice(-2);',\n      '  return \\'#\\' + r + g + b;', '}'\n    ]);\n    const code = functionName + '(' + red + ', ' + green + ', ' + blue + ')';\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Blocks['color_with_hsv'] = {\n    init: function() {\n      this.appendValueInput(\"hue\")\n          .setCheck(null)\n          .setAlign(Blockly.ALIGN_RIGHT)\n          .appendField(\"color with hue\");\n      this.appendValueInput(\"saturation\")\n          .setCheck(null)\n          .setAlign(Blockly.ALIGN_RIGHT)\n          .appendField(\"saturation\");\n      this.appendValueInput(\"brightness\")\n          .setCheck(null)\n          .setAlign(Blockly.ALIGN_RIGHT)\n          .appendField(\"brightness\");\n      this.setOutput(true, null);\n      this.setColour(20);\n   this.setTooltip(\"\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\n  Blockly.JavaScript['color_with_hsv'] = function(block) {\n    var value_hue = Blockly.JavaScript.valueToCode(block, 'hue', Blockly.JavaScript.ORDER_ATOMIC);\n    var value_saturation = Blockly.JavaScript.valueToCode(block, 'saturation', Blockly.JavaScript.ORDER_ATOMIC);\n    var value_brightness = Blockly.JavaScript.valueToCode(block, 'brightness', Blockly.JavaScript.ORDER_ATOMIC);\n    // TODO: Assemble JavaScript into code variable.\n    var code = `colorToHex(hsv2rgb({h: ${value_hue}, s: ${value_saturation} / 100.0, v: ${value_brightness} / 100.0}))`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\nBlockly.Blocks['get_hue_of'] = {\n  init: function() {\n      this.appendValueInput(\"NAME\")\n          .setCheck(\"Pixel\")\n          .appendField(\"get hue of\");\n      this.setOutput(true, null);\n      this.setColour(170);\n  this.setTooltip(\"\");\n  this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.JavaScript['get_hue_of'] = function(block) {\n    var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC);\n    var code = `(${value_name} == null ? 0 : rgb2hsv(hexToColor(${value_name})).h)`;\n    if (value_name === \"\") code = 0;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.Blocks['get_saturation_of'] = {\n  init: function() {\n      this.appendValueInput(\"NAME\")\n          .setCheck(\"Pixel\")\n          .appendField(\"get saturation of\");\n      this.setOutput(true, null);\n      this.setColour(170);\n  this.setTooltip(\"\");\n  this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.JavaScript['get_saturation_of'] = function(block) {\n    var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC);\n    var code = `(${value_name} == null ? 0 : rgb2hsv(hexToColor(${value_name})).s * 100)`;\n    if (value_name === \"\") code = 0;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.Blocks['get_brightness_of'] = {\n  init: function() {\n      this.appendValueInput(\"NAME\")\n          .setCheck(\"Pixel\")\n          .appendField(\"get brightness of\");\n      this.setOutput(true, null);\n      this.setColour(170);\n  this.setTooltip(\"\");\n  this.setHelpUrl(\"\");\n  }\n};\n\nBlockly.JavaScript['get_brightness_of'] = function(block) {\n    var value_name = Blockly.JavaScript.valueToCode(block, 'NAME', Blockly.JavaScript.ORDER_ATOMIC);\n    var code = `(${value_name} == null ? 0 : rgb2hsv(hexToColor(${value_name})).v * 100)`;\n    if (value_name === \"\") code = 0;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\n","import { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nexport const Nav = styled.nav`\nbackground: #63D471;\nheight: 85px;\ndisplay: flex;\njustify-content: space-between;\npadding: 0.2rem calc((100vw - 1000px) / 2);\nz-index: 12;\n/* Third Nav */\n/* justify-content: flex-start; */\n`;\n\nexport const NavLink = styled(Link)`\ncolor: #808080;\ndisplay: flex;\nalign-items: center;\ntext-decoration: none;\npadding: 0 1rem;\nheight: 100%;\ncursor: pointer;\n&.active {\n\tcolor: #000000;\n}\n`;\n\nexport const Bars = styled(FaBars)`\ndisplay: none;\ncolor: #808080;\n@media screen and (max-width: 768px) {\n\tdisplay: block;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\ttransform: translate(-100%, 75%);\n\tfont-size: 1.8rem;\n\tcursor: pointer;\n}\n`;\n\nexport const NavMenu = styled.div`\ndisplay: flex;\nalign-items: center;\nmargin-right: -24px;\n/* Second Nav */\n/* margin-right: 24px; */\n/* Third Nav */\n/* width: 100vw;\nwhite-space: nowrap; */\n@media screen and (max-width: 768px) {\n\tdisplay: none;\n}\n`;\n\nexport const NavBtn = styled.nav`\ndisplay: flex;\nalign-items: center;\nmargin-right: 24px;\n/* Third Nav */\n/* justify-content: flex-end;\nwidth: 100vw; */\n@media screen and (max-width: 768px) {\n\tdisplay: none;\n}\n`;\n\nexport const NavBtnLink = styled(Link)`\nborder-radius: 4px;\nbackground: #808080;\npadding: 10px 22px;\ncolor: #000000;\noutline: none;\nborder: none;\ncursor: pointer;\ntransition: all 0.2s ease-in-out;\ntext-decoration: none;\n/* Second Nav */\nmargin-left: 24px;\n&:hover {\n\ttransition: all 0.2s ease-in-out;\n\tbackground: #fff;\n\tcolor: #808080;\n}\n`;\n","import React from 'react';\nimport {\nNav,\nNavLink,\nBars,\nNavMenu,\nNavBtn,\nNavBtnLink,\n} from './NavbarElements';\nimport './Navbar.css'\n\nconst Navbar = () => {\n\treturn (\n\t\t<>\n\t\t\t{/* <Nav>\n\t\t\t\t<Bars />\n\n\t\t\t\t<NavMenu>\n\t\t\t\t\t<NavLink to='/create' activeStyle>\n\t\t\t\t\t\tCreate\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink to='/filters' activeStyle>\n\t\t\t\t\t\tFilters\n\t\t\t\t\t</NavLink>\n\t\t\t\t</NavMenu>\n\t\t\t</Nav> */}\n\t\t\t<nav className=\"navbar is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n\t\t\t\t<div className=\"navbar-brand\">\n\t\t\t\t\t<span className=\"navbar-item\">\n\t\t\t\t\t<img className=\"camelot-logo-image\" src=\"/img/logo.png\" width=\"62\" height=\"112\"/>\n\t\t\t\t\t<h1 className=\"camelot-logo\">CAMELOT</h1>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<a role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n\t\t\t\t\t<span aria-hidden=\"true\"></span>\n\t\t\t\t\t<span aria-hidden=\"true\"></span>\n\t\t\t\t\t<span aria-hidden=\"true\"></span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"navbarBasicExample\" className=\"navbar-menu\">\n\t\t\t\t\t<div className=\"navbar-start\">\n\t\t\t\t\t<NavLink className=\"navbar-item\" to='/'>\n\t\t\t\t\t\tHome\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink className=\"navbar-item\" to='/create'>\n\t\t\t\t\t\tCreate\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink className=\"navbar-item\" to='/filters'>\n\t\t\t\t\t\tFilters\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t{/* <a href=\"/create\" className=\"navbar-item\">\n\t\t\t\t\t\tHome\n\t\t\t\t\t</a>\n\n\t\t\t\t\t<a className=\"navbar-item\">\n\t\t\t\t\t\tDocumentation\n\t\t\t\t\t</a> */}\n\n\t\t\t\t\t{/* <div className=\"navbar-item has-dropdown is-hoverable\">\n\t\t\t\t\t\t<a className=\"navbar-link\">\n\t\t\t\t\t\tMore\n\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t<div className=\"navbar-dropdown\">\n\t\t\t\t\t\t<a className=\"navbar-item\">\n\t\t\t\t\t\t\tAbout\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a className=\"navbar-item\">\n\t\t\t\t\t\t\tJobs\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a className=\"navbar-item\">\n\t\t\t\t\t\t\tContact\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<hr className=\"navbar-divider\"/>\n\t\t\t\t\t\t<a className=\"navbar-item\">\n\t\t\t\t\t\t\tReport an issue\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div> */}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"navbar-end\">\n\t\t\t\t\t{/* <div className=\"navbar-item\">\n\t\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t<a className=\"button is-primary\">\n\t\t\t\t\t\t\t<strong>Sign up</strong>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a className=\"button is-light\">\n\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t</>\n\t);\n};\n\nexport default Navbar","import React, {useState, useEffect} from 'react';\nimport {useNavigate} from 'react-router-dom'\n\nconst Home = () => {\n    const [index, setIndex] = useState(0)\n    const navigate = useNavigate();\n\n    useEffect(() => {\n      document.body.parentElement.style.overflowY = \"hidden\";\n    }, []);\n\n    const images = [\n        {\n          name: \"Default\",\n          url: \"wp.jpg\"\n        },\n        {\n          name: \"Reddify\",\n          url: \"reddify.jpg\"\n        },\n    ]\n\n    const toggleImg = (e) => {\n        setIndex(1-index);\n      }\n\n    function TryMe(props) {\n        return (\n          <button \n            class=\"button has-text-centered is-warning is-rounded\" \n            onClick={props.toggle}\n          >\n            Try Me!\n          </button>\n        );\n    }\n\nreturn (\n    <div class=\"column\">\n        <h1 class=\"title has-text-centered\">\n            Welcome to Camelot\n        </h1>\n        <h2 class=\"subtitle has-text-centered\">\n            A photo editing and educational programming platform!\n        </h2>\n    <div class=\"columns is-mobile is-centered is-vcentered\">\n      <div class=\"column is-half\">\n        <figure class=\"image is-5by3\">\n            <img src={images[index].url} alt=\"Description\"/>\n        </figure>\n      </div>\n      <div class=\"column is-half\">\n        <figure class=\"image\">\n            <img src=\"filter.jpg\" alt=\"Description\"/>\n        </figure>\n        <br/>\n        <div class=\"box has-text-centered is-shadowless\">\n            <TryMe toggle={(e) => toggleImg(e)}/>\n            <h3 class=\"subtitle has-text-centered\">\n                Click here to apply the filter <br/>\n                Click again to reset the image\n            </h3>\n        </div>\n      </div>\n    </div>\n    <div class=\"box has-text-centered is-shadowless\">\n        <button \n            class=\"button is-medium is-success is-rounded\"\n            onClick={() => navigate(\"/create\")}\n        >\n            Let's Get Started!\n        </button>\n    </div>\n    </div>\n\t// <div class=\"hero-body\">\n    //         <div class=\"container has-text-centered\">\n    //             <div class=\"columns is-vcentered\">\n    //                 <div class=\"column is-6\">\n                        \n    //                     <figure class=\"image is-2by1\">\n    //                         <img src=\"filter.jpg\" alt=\"Description\"/>\n    //                     </figure>\n    //                     <TryMe toggle={(e) => toggleImg(e)}/>\n\n    //                 </div>\n    //                 <div class=\"column is-5 is-offset-1\">\n    //                     <h1 class=\"title is-2\">\n    //                         Welcome to Camelot\n    //                     </h1>\n    //                     <h2 class=\"subtitle is-4\">\n    //                         A photo editing and educational programming platform!\n    //                     </h2>\n    //                     <br/>\n    //                     {/* <p class=\"has-text-centered\">\n    //                         <a class=\"button is-medium is-info is-outlined\">\n    //                             Learn more\n    //                         </a>\n    //                     </p> */}\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </div>\n);\n};\n\nexport default Home;\n\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport Home from './pages/index';\nimport Create from './pages/create';\nimport Filters from './pages/filters';\n\nfunction App() {\nreturn (\n\t<Router>\n    <Navbar />\n    <Routes>\n      <Route path='/' element={<Home/>} />\n      <Route path='/create' element={<Create/>} />\n      <Route path='/filters' element={<Filters/>} />\n    </Routes>\n\t</Router>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './navbarApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}